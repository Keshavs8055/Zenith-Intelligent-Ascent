// packages/types/src/index.ts
import { z } from "zod";

// AI response schema â€” strongly validates the structure returned by the LLM
export const AIResponseSchema = z.object({
  planTitle: z.string().min(1).default("Untitled Plan"),
  // High-level plan attributes
  status: z.enum(["active", "completed", "archived"]).default("active"),
  adaptive: z.boolean().default(false),
  hoursPerDay: z.number().min(1).max(24).optional(),
  deadline: z
    .string()
    .refine((val) => !isNaN(Date.parse(val)), {
      message: "Invalid date format, expected ISO string",
    })
    .optional(),

  // Tasks generated by AI
  tasks: z
    .array(
      z.object({
        title: z.string().min(1),
        description: z.string().optional().default(""),
        dueDate: z
          .string()
          .refine((val) => !isNaN(Date.parse(val)), {
            message: "Invalid date format, expected ISO string",
          })
          .optional(),
        estimatedHours: z.number().min(0.5).max(24).optional(),
        scheduledTime: z
          .string()
          .refine((val) => !isNaN(Date.parse(val)), {
            message: "Invalid datetime format, expected ISO string",
          })
          .optional(),
      })
    )
    .min(0)
    .default([]),
});

export type AIResponse = z.infer<typeof AIResponseSchema>;
